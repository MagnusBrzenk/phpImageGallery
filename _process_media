#!/bin/bash

clear
echo """
================
PROCESSING MEDIA
================
"""

# Params
target_image_size_kbs=200
thumb_size=100

# Load .env vars
eval $(cat .env | sed 's/^/export /')

# Import media-resizing functions
source _aux_functions

# Loop through contents of media-dump dir
cd galleries
for gallery in *; do

    # Break-loop conditions
    [ -d "$gallery" ] || continue
    [ ! $gallery == "vendor" ] || continue

    # Enter gallery and begin processing it
    cd $gallery
    echo
    echo "- - - - - - - - - - - - - - - - - - "
    echo "Processing the '"$gallery"' gallery "
    echo "- - - - - - - - - - - - - - - - - - "

    # Confirm gallery has required dirs
    if [[ ! -d image-thumbs || ! -d images || ! -d processed-media || ! -d media-dump || ! -d videos || ! -d video-thumbs ]]; then
        echo "Error! "$gallery" does not have all required dirs!" 1>&2
        exit 1
    fi

    # Enter /media-dump and process files based on type
    cd media-dump

    # First media-processing loop
    # Move files in date-labelled dirs back into media-dump and remove dir
    for dir in */; do

        # Only handle dirs
        [ -d "$dir" ] || continue

        # Handle each media file in $dir
        cd "$dir"
        for file in *; do

            # Only handle real files
            [ -f "$file" ] || continue

            # Refine file/date strings
            file_lowercase=$(echo $file | tr [A-Z] [a-z])
            caption_date="${dir//\//}" # Replaces forward slash in date name

            # Build and run query to add caption_date to this file's name/caption_id
            query="USE $LOCAL_DB_NAME;
                        INSERT INTO captions (caption_id, caption_date)
                        VALUES('$file_lowercase', '$caption_date') ON DUPLICATE KEY
                        UPDATE caption_id='$file_lowercase', caption_date='$caption_date';
                    "
            echo ">>>>>"
            echo $query
            query_mysql $query

            # Move file back to media-dump
            echo ">>>"$file_lowercase
            find ./ -type f -name "$file" -exec mv {} ../"$file_lowercase" \;
        done

        # Remove any remaining files in data-labelled dir
        find ./ -type f -delete
        cd ..
        rmdir "$dir"
    done

    # Second media-processing loop
    # Loop through files in media-dump, process and sort them
    for file in *; do

        [ -f "$file" ] || continue

        # Rename file to lowercase for ease/consistent processing
        file_lowercase=$(echo $file | tr [A-Z] [a-z])
        mv $file $file_lowercase

        # Begin processing file
        echo "\n>>>> "$file""
        sleep .2

        # Copy original
        cp $file_lowercase ../processed-media/

        # Handle new image
        if [[ $file_lowercase =~ .*\.(jpg|jpeg|heic) ]]; then
            # Call function to generate resized image called `resized-$file_lowercase`
            gen_resized_image $file_lowercase $target_image_size_kbs
            mv resized-$file_lowercase ../images/$file_lowercase
            convert -define jpeg:size=400x400 $file_lowercase[1] -thumbnail ${thumb_size}x${thumb_size}^ -gravity center -extent ${thumb_size}x${thumb_size} ../image-thumbs/$file_lowercase
            rm $file_lowercase

        # Handle new movie
        elif [[ $file_lowercase =~ .*\.(mp4|m4v|mov) ]]; then
            new_video_file=${file_lowercase%.*}.m4v
            gen_resized_video $file_lowercase $new_video_file # Generate resized video in ../videos
            video_thumb=$new_video_file".jpg"
            convert -define jpeg:size=200x200 $file_lowercase[1] -thumbnail ${thumb_size}x${thumb_size}^ -gravity center -extent ${thumb_size}x${thumb_size} ../video-thumbs/$video_thumb
            rm $file_lowercase

        # Reject unrecognized file extensions
        else
            echo $file" has incompatible extension. Skipping!"
            continue
        fi

        # Add file name to db:
        query="USE $LOCAL_DB_NAME;
                    INSERT INTO captions (caption_id)
                    VALUES('$file_lowercase') ON DUPLICATE KEY
                    UPDATE caption_id='$file_lowercase';
                "
        query_mysql $query

    done #End of files-in-media-dump loop

    # Go back to galleries
    cd ../..

done #End of galleries loop
